#!/usr/bin/python

import ConfigParser
from datetime import datetime
import feedparser
from HTMLParser import HTMLParser
from os import path
import re
import subprocess
import time

config = ConfigParser.ConfigParser()
config.read('%s/rtm.cfg' % path.abspath(path.dirname(__file__)))

user = config.get('Security', 'username')
passwd = config.get('Security', 'passwd')

if path.exists('/usr/local/bin/growlnotify'):
   args = [ '/usr/local/bin/growlnotify', "-t", "To Do Today", "-m" ]
elif path.exists('/usr/bin/notify-send'):
   args = [ '/usr/bin/notify-send', "To Do Today" ]

class MyParser(HTMLParser):
   def __init__(self):
      HTMLParser.__init__(self)
      self.flag = 0
      self.data = ''

   def handle_starttag(self, tag, attributes):
      if tag != 'span':
         return
      for name,value in attributes:
         if name == 'class' and value == 'rtm_due_value':
            break
      else:
         return
      self.flag = 1

   def handle_data(self, data):
      if self.flag == 1:
         self.data = data

   def handle_endtag(self, tag):
      self.flag = 0


start = time.time()
 
feeds = [
   'https://%s:%s@www.rememberthemilk.com/atom/%s/' % (user, passwd, user),
]
 
for url in feeds:
   options = {
      'agent'   : '..',
      'etag'    : '..',
      'modified': feedparser._parse_date('Sat, 29 Oct 1994 19:43:31 GMT'),
      'referrer' : '..'
   }
 
feed = feedparser.parse(url, **options)
 
for entry in feed.entries:
   parser = MyParser()
   parser.feed(entry.summary)
   if parser.data != 'never':
      if datetime.strptime(parser.data, '%a %d %b %y').date() < datetime.today().date():
         tmp_args = list(args)
         tmp_args.append(entry.title)
         subprocess.call(tmp_args)

